"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "lib_wallet_js";
exports.ids = ["lib_wallet_js"];
exports.modules = {

/***/ "./lib/wallet.js":
/*!***********************!*\
  !*** ./lib/wallet.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batch_contracts\": () => (/* binding */ batch_contracts),\n/* harmony export */   \"checkIfWalletConnected\": () => (/* binding */ checkIfWalletConnected),\n/* harmony export */   \"connectWallet\": () => (/* binding */ connectWallet),\n/* harmony export */   \"connectWalletNoPopUp\": () => (/* binding */ connectWalletNoPopUp),\n/* harmony export */   \"contract\": () => (/* binding */ contract),\n/* harmony export */   \"disconnectWallet\": () => (/* binding */ disconnectWallet),\n/* harmony export */   \"getActiveAccount\": () => (/* binding */ getActiveAccount),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"views\": () => (/* binding */ views)\n/* harmony export */ });\n/* harmony import */ var _taquito_taquito__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @taquito/taquito */ \"@taquito/taquito\");\n/* harmony import */ var _taquito_taquito__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_taquito_taquito__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _taquito_beacon_wallet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @taquito/beacon-wallet */ \"@taquito/beacon-wallet\");\n/* harmony import */ var _taquito_beacon_wallet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_taquito_beacon_wallet__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _airgap_beacon_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @airgap/beacon-sdk */ \"@airgap/beacon-sdk\");\n/* harmony import */ var _airgap_beacon_sdk__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_airgap_beacon_sdk__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n//import config from \"../config\";\n// TODO: Change back to ghostnet or to other testnet address!!!!!!\nconst preferredNetwork = \"ghostnet\";\n// const preferredNetwork = \"mainnet\";\nconst options = {\n    name: \"Reckless\",\n    iconUrl: \"https://tezostaquito.io/img/favicon.png\",\n    preferredNetwork: preferredNetwork\n};\nconst rpcURL = \"https://ghostnet.smartpy.io\";\n// const rpcURL = \"https://mainnet.smartpy.io\";\nconst wallet = new _taquito_beacon_wallet__WEBPACK_IMPORTED_MODULE_1__.BeaconWallet(options);\n//OpKind\nconst getActiveAccount = async ()=>{\n    return {\n        wallet: await wallet.client.getActiveAccount()\n    };\n};\nasync function connectWallet() {\n    let account = await wallet.client.getActiveAccount();\n    if (!account) {\n        await wallet.requestPermissions({\n            network: {\n                type: preferredNetwork\n            }\n        });\n        account = await wallet.client.getActiveAccount();\n    }\n    return {\n        success: true,\n        wallet: account.address,\n        pk: account.publicKey\n    };\n}\n;\nasync function connectWalletNoPopUp() {\n    let account = await wallet.client.getActiveAccount();\n    if (!account) {\n        return {\n            success: false,\n            wallet: \"\",\n            pk: \"\"\n        };\n    }\n    return {\n        success: true,\n        wallet: account.address,\n        pk: account.publicKey\n    };\n}\n;\nconst disconnectWallet = async ()=>{\n    await wallet.disconnect();\n    wallet = new _taquito_beacon_wallet__WEBPACK_IMPORTED_MODULE_1__.BeaconWallet(options);\n    return {\n        success: true,\n        wallet: null\n    };\n};\nconst checkIfWalletConnected = async (wallet)=>{\n    try {\n        const activeAccount = await wallet.client.getActiveAccount();\n        if (!activeAccount) {\n            await wallet.client.requestPermissions({\n                type: {\n                    network: preferredNetwork\n                }\n            });\n        }\n        return {\n            success: true,\n            wallet: activeAccount\n        };\n    } catch (error) {\n        return {\n            success: false,\n            wallet: \"\",\n            error\n        };\n    }\n};\nconst sign = async (msg)=>{\n    const payload = {\n        signingType: _airgap_beacon_sdk__WEBPACK_IMPORTED_MODULE_2__.SigningType.MICHELINE,\n        payload: msg\n    };\n    const response = await checkIfWalletConnected(wallet);\n    if (response.success) {\n        const tezos = new _taquito_taquito__WEBPACK_IMPORTED_MODULE_0__.TezosToolkit(rpcURL);\n        tezos.setWalletProvider(wallet);\n        return (await wallet.client.requestSignPayload(payload)).signature;\n    }\n};\nconst batch_contracts = async (contract_calls, amount)=>{\n    // const wallet = new BeaconWallet(options);\n    const response = await checkIfWalletConnected(wallet);\n    if (response.success) {\n        const tezos = new _taquito_taquito__WEBPACK_IMPORTED_MODULE_0__.TezosToolkit(rpcURL);\n        tezos.setWalletProvider(wallet);\n        // const contract = await tezos.wallet.at(address);\n        // //console.log(\"s \", args)\n        // const operation = contract.methodsObject[func](args);\n        const batch = await tezos.wallet.batch(await Promise.all(contract_calls.map(async (contract_call)=>{\n            let contract = await tezos.wallet.at(contract_call.address);\n            return {\n                kind: _taquito_taquito__WEBPACK_IMPORTED_MODULE_0__.OpKind.TRANSACTION,\n                ...contract.methodsObject[contract_call.func](contract_call.args).toTransferParams()\n            };\n        })));\n        const sending = await batch.send({\n            amount: amount\n        });\n        const result = await sending.confirmation();\n    // console.log(result);\n    }\n};\nconst contract = async (address, func, args, amount)=>{\n    // const wallet = new BeaconWallet(options);\n    const response = await checkIfWalletConnected(wallet);\n    if (response.success) {\n        const tezos = new _taquito_taquito__WEBPACK_IMPORTED_MODULE_0__.TezosToolkit(rpcURL);\n        tezos.setWalletProvider(wallet);\n        const contract = await tezos.wallet.at(address);\n        //console.log(\"s \", args)\n        const operation = contract.methodsObject[func](args);\n        const sending = await operation.send({\n            amount: amount\n        });\n        const result = await sending.confirmation();\n    //console.log(result);\n    }\n};\nconst views = async (address, func, args)=>{\n    const tezos = new _taquito_taquito__WEBPACK_IMPORTED_MODULE_0__.TezosToolkit(rpcURL);\n    const contract = await tezos.contract.at(address);\n    return await contract.views[func](args).read();\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/wallet.js\n");

/***/ })

};
;